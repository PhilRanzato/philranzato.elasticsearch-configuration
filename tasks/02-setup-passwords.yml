---
# HTTP
- name: "Add password for http keystore" 
  shell: "echo '{{ elasticsearch.certificates.http_certificate.password }}' | /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.http.ssl.keystore.secure_password --force"
  become: true

- name: "Add password for http truststore" 
  shell: "echo '{{ elasticsearch.certificates.http_certificate.password }}' | /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.http.ssl.truststore.secure_password --force"
  become: true

# Transport
- name: "Add password for transport keystore" 
  shell: "echo '{{ elasticsearch.certificates.transport_certificate.password }}' | /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.transport.ssl.keystore.secure_password --force"
  become: true

- name: "Add password for transport truststore" 
  shell: "echo '{{ elasticsearch.certificates.transport_certificate.password }}' | /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.transport.ssl.truststore.secure_password --force"
  become: true

# Setup passwords
- name: "Setup passwords for builtin users"
  command: "/usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto -b -u https://{{ hostvars[groups[elasticsearch_primary_master_group_name][0]].ansible_default_ipv4.address }}:{{ http.port }}"
  register: _builtin_passwords
  become: true
  notify: "Restart Elasticsearch"

# Process automatic password change
- name: "Print registered"
  debug:
    msg: "{{ _builtin_passwords }}"

- name: "Extract username and password"
  set_fact:
    builtin: []

- name: "Extract username and password"
  set_fact:
    builtin: "{{ builtin + [{'user': item | regex_search('[a-z]+(_[a-z]+)?'), 'password': item | regex_search('=.+') | regex_replace('= ', '')}] }}"
  when: "'=' in item"
  loop: "{{ _builtin_passwords.stdout_lines }}"

- name: "Create a temporary file to store password for builtin users"
  tempfile:
    prefix: "ansible"
    suffix: ".json"
  register: pwd_file

- name: "Insert passwords into the file"
  copy:
    content: "{{ builtin | to_nice_json }}"
    dest: "{{ pwd_file.path }}"

- name: "Fetch the passwords file"
  fetch:
    src: "{{ pwd_file.path }}"
    dest: "{{ playbook_dir }}/files/builtin_passwords.json"
    flat: yes

- name: "Remove tempfile"
  file:
    path: "{{ pwd_file.path }}"
    state: absent
